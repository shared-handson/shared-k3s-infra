name: "Terraform CI"

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

permissions:
  id-token: write
  contents: read
  issues: write
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      # AWS認証情報とTerraformバックエンド設定を環境変数として定義
      AWS_REGION: "ap-northeast-1"
      TF_VERSION: "1.12.2"

    steps:
      # リポジトリ名だけを取得
      - name: Get repository name without owner
        id: repo_name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> "$GITHUB_ENV"

      # リポジトリのコードをチェックアウト
      - name: Checkout
        uses: actions/checkout@v4

      # AWSのOIDC認証を設定
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      # Terraform CLIのセットアップ
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Terraformの初期化
      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.AWS_TF_STATE_BUCKET }}" \
            -backend-config="key=${REPO_NAME}/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="use_lockfile=true"

      # Terraformのフォーマットチェック
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      # バックエンドS3の設定を確認
      - name: Check Backend
        id: check_backend
        continue-on-error: true
        run: |
          aws s3api head-bucket --bucket ${{ secrets.AWS_TF_STATE_BUCKET }}
          if [ ! -f ".terraform/terraform.tfstate" ]; then exit 1; fi
          if [ "$(jq -r '.backend.type' ".terraform/terraform.tfstate")" != "s3" ]; then exit 1; fi

      # (バックエンドチェック失敗時) Pull Request コメントに結果してクローズ
      - name: Handle backend Check Failure
        if: steps.check_backend.outcome == 'failure'
        uses: ./.github/actions/pr-failure-handler
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ❌ **S3確認 : 失敗**
            ⚠️ このPRは現在マージできません。以下の問題を修正してください：

            ### 🔧 エラー内容
            S3へ書き込みができない(存在しない) もしくは
            ソースコードで `backend "S3" {}'を書いていない

      # Terraformのドライラン
      - name: Terraform Plan for PR
        id: plan
        continue-on-error: true
        run: |
          {
            echo 'PLAN_OUTPUT<<EOF'
            terraform plan -no-color -input=false
            echo EOF
          } >> "$GITHUB_OUTPUT"

      # (バックエンドチェック失敗時) Pull Request コメントに結果してクローズ
      - name: Handle backend Check Failure
        if: steps.plan.outcome == 'failure'
        uses: ./.github/actions/pr-failure-handler
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ❌ **terraform plan : 失敗**
            ⚠️ このPRは現在マージできません。以下の問題を修正してください：

            ### 🔧 エラー内容
            ```terraform
            ${{ steps.plan.outputs.PLAN_OUTPUT }}
            ```

      # (成功時) Pull Request コメントに結果
      - name: PR Comment on Success
        if: steps.plan.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          MSG=$(cat <<EOF
          👍 **terraform plan : 成功**
          ✅ 正しく適用が可能です。内容は以下を確認してください。

          ### Show Plan
          \`\`\`terraform
          ${{ steps.plan.outputs.PLAN_OUTPUT }}
          \`\`\`

          ### Terraform Format and Style 🖌️
          \`${{ steps.fmt.outcome }}\`

          ### Terraform Initialization ⚙️
          \`${{ steps.init.outcome }}\`
          EOF
          )
          gh pr comment ${{ github.event.pull_request.number }} --body-file <(echo "${MSG}")
