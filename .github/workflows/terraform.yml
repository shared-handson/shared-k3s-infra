name: "Terraform CI/CD"

# ワークフローが実行されるトリガーを定義
on:
  push:
    branches:
      - main # mainブランチへのpush時
  pull_request:
    branches:
      - main # mainブランチへのpull_request時

permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest

    env:
      # AWS認証情報とTerraformバックエンド設定を環境変数として定義
      AWS_REGION: "ap-northeast-1"
      TF_VERSION: "1.12.2"

    steps:
      # 1. リポジトリ名だけを取得
      - name: Get repository name without owner
        id: repo_name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> "$GITHUB_ENV"

      # 2. リポジトリのコードをチェックアウト
      - name: Checkout
        uses: actions/checkout@v4

      # 3. AWSのOIDC認証を設定
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      # 4. Terraform CLIのセットアップ
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # 5. Terraformの初期化
      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.AWS_TF_STATE_BUCKET }}" \
            -backend-config="key=${REPO_NAME}/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="use_lockfile=true"

      # 6. Terraformのフォーマットチェック
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      # 7-1. (PR時)Terraformのドライラン
      - name: Terraform Plan for PR
        id: plan-for-pr
        if: github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          {
            echo 'PLAN_OUTPUT<<EOF'
            terraform plan -no-color -input=false
            echo EOF
          } >> "$GITHUB_ENV"

      # 7-2. (PR時)Pull RequestにPlan結果をコメント
      - name: PR comment with Plan
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # コメントの本文をヒアドキュメントで変数に格納
          COMMENT_BODY=$(cat <<EOF
          #### Terraform Format and Style 🖌️ \`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ⚙️ \`${{ steps.init.outcome }}\`
          #### Terraform Plan 📖 \`${{ steps.plan-for-pr.outcome }}\`
          <details><summary>Show Plan</summary>

          \`\`\`terraform
          ${PLAN_OUTPUT}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*
          EOF
          )

          # Github CLIでコメントを投稿
          gh pr comment --body-file <(echo "$COMMENT_BODY")

      # 8-1. (Push時)Terraformのドライランおよび出力
      - name: Terraform Plan for Push
        id: plan-for-apply
        if: github.event_name == 'push'
        run: terraform plan -no-color -input=false -out=tfplan-for-push

      # 8-2. (Push時)Terraformの適用
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false tfplan-for-push
